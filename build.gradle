apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'signing'
apply from: "$project.rootDir/gradle/pom.gradle"
apply plugin: 'idea'

group = 'io.jdev.pdf'
version = '0.1-SNAPSHOT'

repositories {
	mavenCentral()
}

dependencies {
    compile "org.codehaus.groovy:groovy-all:2.2.2"
	compile 'com.itextpdf:itextpdf:5.5.2'

    testCompile "org.spockframework:spock-core:0.7-groovy-2.0"
    testRuntime "cglib:cglib-nodep:3.1"
}

targetCompatibility = 1.6
sourceCompatibility = 1.6

test {
	testLogging {
		exceptionFormat = 'full'
	}
}

allprojects {
	task resolveAllDependencies {
		doLast {
			configurations.all { it.resolve() }
		}
	}
}

ext {
	isSnapshot = version.endsWith("-SNAPSHOT")
}

signing {
	sign configurations.archives
	required { !isSnapshot && gradle.taskGraph.hasTask(uploadArchives) }
}

javadoc {
	title = "Geb Cucumber API $version"
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
	from sourceSets.main.allSource
	classifier = 'sources'
}

artifacts {
	archives jar
	archives javadocJar
	archives sourcesJar
}

uploadArchives { task ->
	repositories.mavenDeployer {
		if(!isSnapshot) {
			beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
		}
		uniqueVersion = false
		gradle.taskGraph.whenReady { taskGraph ->
			if (taskGraph.hasTask(task)) {
				repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
					authentication(userName: sonatypeOssUsername, password: sonatypeOssPassword)
				}
				snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
					authentication(userName: sonatypeOssUsername, password: sonatypeOssPassword)
				}
			}
		}
	}
}

task uploadSnapshots << {
	if(!isSnapshot) {
		println "Not uploading snapshot as not a snapshot version"
	}
}
if(isSnapshot) {
	uploadSnapshots.dependsOn(uploadArchives)
}

